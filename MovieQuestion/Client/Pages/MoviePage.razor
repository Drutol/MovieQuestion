@page "/movie/{id}"
@using Blazor.Extensions.Storage
@using MovieQuestion.Client.Infrastructure
@using MovieQuestion.Client.Utils
@using MovieQuestion.Shared.Models
@inject ApiCommunicator ApiCommunicator
@inject RatingManager RatingManager
@inject NavigationManager NavigationManager
@inject MovieManager MovieManager
@inject LocalStorage LocalStorage

@if (_movie != null)
{
    <div class="movie-page-grid">
        <img class="movie-poster" src="@_movie.ImageUrl"/>
        <p class="jumbotron">@_movie.Description</p>
        <div class="rating-grid">
            <h2>@_movie.Title</h2>
            <h5>@($"Film {_movie.Id} z 200")</h5>
            <button class="btn btn-warning zero" @onclick="@(() => Rate(0))"><span class="oi oi-star"/></button>
            <button class="btn btn-warning one" @onclick="@(() => Rate(1))"><span class="oi oi-star"/><span class="oi oi-star" /></button>
            <button class="btn btn-warning two" @onclick="@(() => Rate(2))"><span class="oi oi-star"/><span class="oi oi-star" /><span class="oi oi-star"/></button>
            <button class="btn btn-warning three" @onclick="@(() => Rate(3))"><span class="oi oi-star"/><span class="oi oi-star" /><span class="oi oi-star"/><span class="oi oi-star"/></button>
            <button class="btn btn-warning four" @onclick="@(() => Rate(4))"><span class="oi oi-star"/><span class="oi oi-star" /><span class="oi oi-star"/><span class="oi oi-star"/><span class="oi oi-star"/></button>
            <button class="btn btn-warning five" @onclick="@(() => Rate(5))"><span class="oi oi-star"/><span class="oi oi-star" /><span class="oi oi-star"/><span class="oi oi-star"/><span class="oi oi-star"/><span class="oi oi-star"/></button>
            <button class="btn btn-danger skip" @onclick="@(() => Rate(-1))">Nie obejrzany</button>
        </div>
    </div>
}


@code {

    [Parameter]
    public string Id { get; set; }

    private Movie _movie;

    protected override async Task OnInitializedAsync()
    {
        if (_movie == null && int.TryParse(Id, out var id))
        {
            _movie = MovieManager.Movies.FirstOrDefault(movie => movie.Id == id);
        }
    }

    private async void Rate(int score)
    {
        var rating = new MovieRating
        {
            MovieId = _movie.Id,
            UserId = (await LocalStorage.GetItem<AppUser>()).Id,
            Score = score
        };
        await ApiCommunicator.AddRating(rating);
        RatingManager.SetRating(rating);
        if (_movie.Id == 200)
            NavigationManager.NavigateTo($"movies");
        else
        {
            _movie = MovieManager.Movies.FirstOrDefault(movie => movie.Id == _movie.Id + 1);
            StateHasChanged();
        }
    }

}